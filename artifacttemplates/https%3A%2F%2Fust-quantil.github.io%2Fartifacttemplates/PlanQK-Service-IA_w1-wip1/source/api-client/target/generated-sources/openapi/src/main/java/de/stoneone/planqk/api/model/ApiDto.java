/*
 * PlanQK Platform OpenAPI definition
 * OpenAPI definition for the Platform and Ecosystem for Quantum-assisted Artificial Intelligence Platform
 *
 * The version of the OpenAPI document: v1
 * Contact: info@stoneone.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.stoneone.planqk.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import de.stoneone.planqk.api.model.PricingPlanDto;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ApiDto
 */
@JsonPropertyOrder({
  ApiDto.JSON_PROPERTY_ID,
  ApiDto.JSON_PROPERTY_SERVICE_ID,
  ApiDto.JSON_PROPERTY_NAME,
  ApiDto.JSON_PROPERTY_CONTEXT,
  ApiDto.JSON_PROPERTY_VERSION,
  ApiDto.JSON_PROPERTY_DESCRIPTION,
  ApiDto.JSON_PROPERTY_GATEWAY_ENDPOINT,
  ApiDto.JSON_PROPERTY_QUANTUM_BACKEND,
  ApiDto.JSON_PROPERTY_PRICING_PLANS,
  ApiDto.JSON_PROPERTY_PRICING_CATEGORY,
  ApiDto.JSON_PROPERTY_INDUSTRIES,
  ApiDto.JSON_PROPERTY_PROVIDER,
  ApiDto.JSON_PROPERTY_LIFECYCLE,
  ApiDto.JSON_PROPERTY_SERVICE_TYPE,
  ApiDto.JSON_PROPERTY_RATING
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-12T17:23:29.757670+01:00[Europe/Berlin]")
public class ApiDto {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_SERVICE_ID = "serviceId";
  private UUID serviceId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_CONTEXT = "context";
  private String context;

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_GATEWAY_ENDPOINT = "gatewayEndpoint";
  private String gatewayEndpoint;

  /**
   * Gets or Sets quantumBackend
   */
  public enum QuantumBackendEnum {
    IBM("IBM"),
    
    IONQ("IONQ"),
    
    DWAVE("DWAVE"),
    
    NONE("NONE"),
    
    AZURE_IONQ("AZURE_IONQ"),
    
    AZURE_RIGETTI("AZURE_RIGETTI");

    private String value;

    QuantumBackendEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static QuantumBackendEnum fromValue(String value) {
      for (QuantumBackendEnum b : QuantumBackendEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_QUANTUM_BACKEND = "quantumBackend";
  private QuantumBackendEnum quantumBackend;

  public static final String JSON_PROPERTY_PRICING_PLANS = "pricingPlans";
  private List<PricingPlanDto> pricingPlans = null;

  /**
   * Gets or Sets pricingCategory
   */
  public enum PricingCategoryEnum {
    FREE("FREE"),
    
    FREEMIUM("FREEMIUM"),
    
    COMMERCIAL("COMMERCIAL");

    private String value;

    PricingCategoryEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PricingCategoryEnum fromValue(String value) {
      for (PricingCategoryEnum b : PricingCategoryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PRICING_CATEGORY = "pricingCategory";
  private PricingCategoryEnum pricingCategory;

  public static final String JSON_PROPERTY_INDUSTRIES = "industries";
  private Set<String> industries = null;

  public static final String JSON_PROPERTY_PROVIDER = "provider";
  private String provider;

  /**
   * Gets or Sets lifecycle
   */
  public enum LifecycleEnum {
    ERROR("ERROR"),
    
    CREATING("CREATING"),
    
    CREATED("CREATED"),
    
    ACCESSIBLE("ACCESSIBLE"),
    
    PUBLISHED("PUBLISHED");

    private String value;

    LifecycleEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LifecycleEnum fromValue(String value) {
      for (LifecycleEnum b : LifecycleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LIFECYCLE = "lifecycle";
  private LifecycleEnum lifecycle;

  /**
   * Gets or Sets serviceType
   */
  public enum ServiceTypeEnum {
    MANAGED("MANAGED"),
    
    EXTERNAL("EXTERNAL");

    private String value;

    ServiceTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ServiceTypeEnum fromValue(String value) {
      for (ServiceTypeEnum b : ServiceTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SERVICE_TYPE = "serviceType";
  private ServiceTypeEnum serviceType;

  public static final String JSON_PROPERTY_RATING = "rating";
  private Double rating;

  public ApiDto() { 
  }

  public ApiDto id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public ApiDto serviceId(UUID serviceId) {
    
    this.serviceId = serviceId;
    return this;
  }

   /**
   * Get serviceId
   * @return serviceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SERVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getServiceId() {
    return serviceId;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceId(UUID serviceId) {
    this.serviceId = serviceId;
  }


  public ApiDto name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ApiDto context(String context) {
    
    this.context = context;
    return this;
  }

   /**
   * Get context
   * @return context
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContext() {
    return context;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContext(String context) {
    this.context = context;
  }


  public ApiDto version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(String version) {
    this.version = version;
  }


  public ApiDto description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public ApiDto gatewayEndpoint(String gatewayEndpoint) {
    
    this.gatewayEndpoint = gatewayEndpoint;
    return this;
  }

   /**
   * Get gatewayEndpoint
   * @return gatewayEndpoint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GATEWAY_ENDPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGatewayEndpoint() {
    return gatewayEndpoint;
  }


  @JsonProperty(JSON_PROPERTY_GATEWAY_ENDPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGatewayEndpoint(String gatewayEndpoint) {
    this.gatewayEndpoint = gatewayEndpoint;
  }


  public ApiDto quantumBackend(QuantumBackendEnum quantumBackend) {
    
    this.quantumBackend = quantumBackend;
    return this;
  }

   /**
   * Get quantumBackend
   * @return quantumBackend
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_QUANTUM_BACKEND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public QuantumBackendEnum getQuantumBackend() {
    return quantumBackend;
  }


  @JsonProperty(JSON_PROPERTY_QUANTUM_BACKEND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantumBackend(QuantumBackendEnum quantumBackend) {
    this.quantumBackend = quantumBackend;
  }


  public ApiDto pricingPlans(List<PricingPlanDto> pricingPlans) {
    
    this.pricingPlans = pricingPlans;
    return this;
  }

  public ApiDto addPricingPlansItem(PricingPlanDto pricingPlansItem) {
    if (this.pricingPlans == null) {
      this.pricingPlans = new ArrayList<>();
    }
    this.pricingPlans.add(pricingPlansItem);
    return this;
  }

   /**
   * Get pricingPlans
   * @return pricingPlans
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PRICING_PLANS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PricingPlanDto> getPricingPlans() {
    return pricingPlans;
  }


  @JsonProperty(JSON_PROPERTY_PRICING_PLANS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPricingPlans(List<PricingPlanDto> pricingPlans) {
    this.pricingPlans = pricingPlans;
  }


  public ApiDto pricingCategory(PricingCategoryEnum pricingCategory) {
    
    this.pricingCategory = pricingCategory;
    return this;
  }

   /**
   * Get pricingCategory
   * @return pricingCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PRICING_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PricingCategoryEnum getPricingCategory() {
    return pricingCategory;
  }


  @JsonProperty(JSON_PROPERTY_PRICING_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPricingCategory(PricingCategoryEnum pricingCategory) {
    this.pricingCategory = pricingCategory;
  }


  public ApiDto industries(Set<String> industries) {
    
    this.industries = industries;
    return this;
  }

  public ApiDto addIndustriesItem(String industriesItem) {
    if (this.industries == null) {
      this.industries = new LinkedHashSet<>();
    }
    this.industries.add(industriesItem);
    return this;
  }

   /**
   * Get industries
   * @return industries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INDUSTRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getIndustries() {
    return industries;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_INDUSTRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIndustries(Set<String> industries) {
    this.industries = industries;
  }


  public ApiDto provider(String provider) {
    
    this.provider = provider;
    return this;
  }

   /**
   * Get provider
   * @return provider
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProvider() {
    return provider;
  }


  @JsonProperty(JSON_PROPERTY_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProvider(String provider) {
    this.provider = provider;
  }


  public ApiDto lifecycle(LifecycleEnum lifecycle) {
    
    this.lifecycle = lifecycle;
    return this;
  }

   /**
   * Get lifecycle
   * @return lifecycle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LIFECYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LifecycleEnum getLifecycle() {
    return lifecycle;
  }


  @JsonProperty(JSON_PROPERTY_LIFECYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLifecycle(LifecycleEnum lifecycle) {
    this.lifecycle = lifecycle;
  }


  public ApiDto serviceType(ServiceTypeEnum serviceType) {
    
    this.serviceType = serviceType;
    return this;
  }

   /**
   * Get serviceType
   * @return serviceType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SERVICE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServiceTypeEnum getServiceType() {
    return serviceType;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceType(ServiceTypeEnum serviceType) {
    this.serviceType = serviceType;
  }


  public ApiDto rating(Double rating) {
    
    this.rating = rating;
    return this;
  }

   /**
   * Get rating
   * @return rating
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getRating() {
    return rating;
  }


  @JsonProperty(JSON_PROPERTY_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRating(Double rating) {
    this.rating = rating;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiDto apiDto = (ApiDto) o;
    return Objects.equals(this.id, apiDto.id) &&
        Objects.equals(this.serviceId, apiDto.serviceId) &&
        Objects.equals(this.name, apiDto.name) &&
        Objects.equals(this.context, apiDto.context) &&
        Objects.equals(this.version, apiDto.version) &&
        Objects.equals(this.description, apiDto.description) &&
        Objects.equals(this.gatewayEndpoint, apiDto.gatewayEndpoint) &&
        Objects.equals(this.quantumBackend, apiDto.quantumBackend) &&
        Objects.equals(this.pricingPlans, apiDto.pricingPlans) &&
        Objects.equals(this.pricingCategory, apiDto.pricingCategory) &&
        Objects.equals(this.industries, apiDto.industries) &&
        Objects.equals(this.provider, apiDto.provider) &&
        Objects.equals(this.lifecycle, apiDto.lifecycle) &&
        Objects.equals(this.serviceType, apiDto.serviceType) &&
        Objects.equals(this.rating, apiDto.rating);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, serviceId, name, context, version, description, gatewayEndpoint, quantumBackend, pricingPlans, pricingCategory, industries, provider, lifecycle, serviceType, rating);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    gatewayEndpoint: ").append(toIndentedString(gatewayEndpoint)).append("\n");
    sb.append("    quantumBackend: ").append(toIndentedString(quantumBackend)).append("\n");
    sb.append("    pricingPlans: ").append(toIndentedString(pricingPlans)).append("\n");
    sb.append("    pricingCategory: ").append(toIndentedString(pricingCategory)).append("\n");
    sb.append("    industries: ").append(toIndentedString(industries)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    lifecycle: ").append(toIndentedString(lifecycle)).append("\n");
    sb.append("    serviceType: ").append(toIndentedString(serviceType)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

